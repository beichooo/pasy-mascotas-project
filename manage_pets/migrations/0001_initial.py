# Generated by Django 4.2.4 on 2023-08-19 01:52

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('shelter_name', models.CharField(max_length=50)),
                ('shelter_logo', models.ImageField(upload_to='qr_donations/')),
                ('shelter_description', models.TextField(max_length=250)),
                ('link_whatsapp', models.URLField(blank=True)),
                ('link_facebook', models.URLField(blank=True)),
                ('link_tiktok', models.URLField(blank=True)),
                ('link_instagram', models.URLField(blank=True)),
                ('qr_donation', models.ImageField(upload_to='shelter_logos/')),
                ('address', models.TextField(max_length=250)),
                ('link_maps', models.URLField(blank=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name_plural': 'Custom Users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Pets',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('species', models.CharField(choices=[('Perro', 'Perro'), ('Gato', 'Gato')], max_length=10)),
                ('gender', models.CharField(choices=[('Macho', 'Macho'), ('Hembra', 'Hembra')], max_length=10)),
                ('size', models.CharField(choices=[('Pequeño', 'Pequeño'), ('Mediano', 'Mediano'), ('Grande', 'Grande')], max_length=10)),
                ('age', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('health', models.CharField(choices=[('Saludable', 'Saludable'), ('Necesita tratamiento', 'Necesita tratamiento'), ('En tratamiento', 'En tratamiento')], max_length=20)),
                ('health_detail', models.TextField(max_length=200)),
                ('personality', models.CharField(choices=[('Amigable', 'Amigable'), ('Juguetón', 'Juguetón'), ('Tranquilo', 'Tranquilo'), ('Atención', 'Atención'), ('Tímido', 'Tímido')], max_length=20)),
                ('pers_detail', models.TextField(max_length=200)),
                ('photos', models.ImageField(upload_to='pet_photos/')),
                ('photos_sec', models.ImageField(blank=True, null=True, upload_to='pet_photos/')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pets', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Pets',
            },
        ),
    ]
